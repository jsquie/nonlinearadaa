on:
  push: 
    branches: [ $default-branch ]
 #   tags:
  #    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
#   You may need to uncomment this part if using granular workflows.
#   permissions:
#     content: write
    strategy:
      matrix:
        include:
          - name: macOS-14
            os: macos-14
          - name: macOS-13
            os: macos-13
          - name: Linux-x64
            os: ubuntu-latest
          - name: Windows-x64
            os: windows-latest

    env:
      SC_PATH: ${{ github.workspace }}/supercollider
      BUILD_PATH: ${{ github.workspace }}/build
      INSTALL_PATH: ${{ github.workspace }}/build/Install
      ARCHIVE_NAME: NonLinearADAA-${{ matrix.name }}.zip
    steps:
    - name: Checkout NonLinearADAA
      uses: actions/checkout@v3

    - name: Checkout SuperCollider
      uses: actions/checkout@v3
      with:
        repository: supercollider/supercollider
        path: ${{ env.SC_PATH }}
        ref: main

      # Create a separate build directory
      # We'll use this as our working directory for subsequent commands
    - name: Create Build Environment
      shell: bash
      run: cmake -E make_directory $BUILD_PATH

    - name: Configure CMake
      shell: bash
      working-directory: ${{ env.BUILD_PATH }}
      run: cmake .. -DCMAKE_BUILD_TYPE='Release' -DSC_PATH="$SC_PATH" -DCMAKE_INSTALL_PREFIX="$INSTALL_PATH"

    - name: Build
      shell: bash
      working-directory: ${{ env.BUILD_PATH }}
      env:
        CMAKE_BUILD_PARALLEL_LEVEL: 4
      run: cmake --build . --config "Release" --target install

      # Gather all files in a zip
    - name: Zip up build (Unix)
      if: runner.os != 'Windows'
      shell: bash
      working-directory: ${{ env.INSTALL_PATH }}
      run: zip -r "$ARCHIVE_NAME" "NonLinearADAA"

      # Gather all files in a zip
    - name: Zip up build (Windows)
      if: runner.os == 'Windows'
      shell: bash
      working-directory: ${{ env.INSTALL_PATH }}
      run: 7z a "$ARCHIVE_NAME" -tzip "NonLinearADAA"

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.INSTALL_PATH }}/${{ env.ARCHIVE_NAME }}
        prerelease: true
        body: ""
        tag: ${{ github.ref }}
